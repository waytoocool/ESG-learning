"""Add sync operation models for T-8 multi-tenant synchronization

Revision ID: a5343bafda05
Revises: 64789300e7f7
Create Date: 2025-06-15 12:33:59.377300

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a5343bafda05'
down_revision: Union[str, None] = '64789300e7f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sync_operations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('operation_type', sa.Enum('FRAMEWORK_SYNC', 'TENANT_CLONE', 'DATA_MIGRATION', 'TEMPLATE_CREATION', name='sync_operation_type'), nullable=False),
    sa.Column('source_id', sa.String(length=36), nullable=True),
    sa.Column('target_ids', sa.JSON(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('QUEUED', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='sync_status'), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('initiated_by', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('log_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['initiated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant_templates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('source_company_id', sa.Integer(), nullable=True),
    sa.Column('template_data', sa.JSON(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_builtin', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['source_company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_migration_jobs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('sync_operation_id', sa.String(length=36), nullable=False),
    sa.Column('migration_type', sa.Enum('EXPORT', 'IMPORT', 'MERGE', 'ARCHIVE', name='migration_type'), nullable=False),
    sa.Column('source_company_ids', sa.JSON(), nullable=True),
    sa.Column('target_company_id', sa.Integer(), nullable=True),
    sa.Column('migration_options', sa.JSON(), nullable=True),
    sa.Column('data_selection', sa.JSON(), nullable=True),
    sa.Column('validation_results', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['sync_operation_id'], ['sync_operations.id'], ),
    sa.ForeignKeyConstraint(['target_company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('framework_sync_jobs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('sync_operation_id', sa.String(length=36), nullable=False),
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.Column('source_company_id', sa.Integer(), nullable=True),
    sa.Column('target_company_ids', sa.JSON(), nullable=False),
    sa.Column('sync_options', sa.JSON(), nullable=True),
    sa.Column('conflict_resolution', sa.Enum('SKIP', 'OVERWRITE', 'MERGE', 'MANUAL', name='conflict_resolution'), nullable=True),
    sa.Column('conflicts_detected', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['framework_id'], ['frameworks.framework_id'], ),
    sa.ForeignKeyConstraint(['source_company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['sync_operation_id'], ['sync_operations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('framework_sync_jobs')
    op.drop_table('data_migration_jobs')
    op.drop_table('tenant_templates')
    op.drop_table('sync_operations')
    # ### end Alembic commands ###
