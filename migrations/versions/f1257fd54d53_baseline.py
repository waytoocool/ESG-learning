"""baseline

Revision ID: f1257fd54d53
Revises: 
Create Date: 2025-06-15 00:07:16.469548

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1257fd54d53'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=20), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['entity.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('frameworks',
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.Column('framework_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('framework_id'),
    sa.UniqueConstraint('framework_name')
    )
    op.create_table('data_point',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('value_type', sa.String(length=10), nullable=False),
    sa.Column('unit', sa.String(length=10), nullable=True),
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['framework_id'], ['frameworks.framework_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('framework_data_fields',
    sa.Column('field_id', sa.String(length=36), nullable=False),
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.Column('field_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_computed', sa.Boolean(), nullable=True),
    sa.Column('formula_expression', sa.Text(), nullable=True),
    sa.Column('constant_multiplier', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['framework_id'], ['frameworks.framework_id'], ),
    sa.PrimaryKeyConstraint('field_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=True),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('data_point_assignments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('data_point_id', sa.String(length=36), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('fy_start_month', sa.Integer(), nullable=False),
    sa.Column('fy_start_year', sa.Integer(), nullable=False),
    sa.Column('fy_end_year', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.Enum('Monthly', 'Quarterly', 'Annual', name='frequency_type'), nullable=False),
    sa.Column('assigned_date', sa.DateTime(), nullable=True),
    sa.Column('assigned_by', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['data_point_id'], ['data_point.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_assignment_data_entity', 'data_point_assignments', ['data_point_id', 'entity_id'], unique=False)
    op.create_index('idx_assignment_fy', 'data_point_assignments', ['fy_start_year', 'fy_end_year'], unique=False)
    op.create_table('entity_data_point',
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('data_point_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['data_point_id'], ['data_point.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.PrimaryKeyConstraint('entity_id', 'data_point_id')
    )
    op.create_table('esg_data',
    sa.Column('data_id', sa.String(length=36), nullable=False),
    sa.Column('data_point_id', sa.String(length=36), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.String(length=36), nullable=False),
    sa.Column('raw_value', sa.String(length=255), nullable=True),
    sa.Column('calculated_value', sa.Float(), nullable=True),
    sa.Column('reporting_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['data_point_id'], ['data_point.id'], ),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['field_id'], ['framework_data_fields.field_id'], ),
    sa.PrimaryKeyConstraint('data_id')
    )
    op.create_index('idx_esg_entity_date', 'esg_data', ['entity_id', 'reporting_date'], unique=False)
    op.create_index('idx_esg_field_date', 'esg_data', ['field_id', 'reporting_date'], unique=False)
    op.create_table('field_variable_mappings',
    sa.Column('mapping_id', sa.String(length=36), nullable=False),
    sa.Column('computed_field_id', sa.String(length=36), nullable=False),
    sa.Column('raw_field_id', sa.String(length=36), nullable=False),
    sa.Column('variable_name', sa.String(length=1), nullable=False),
    sa.Column('coefficient', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['computed_field_id'], ['framework_data_fields.field_id'], ),
    sa.ForeignKeyConstraint(['raw_field_id'], ['framework_data_fields.field_id'], ),
    sa.PrimaryKeyConstraint('mapping_id')
    )
    op.create_table('esg_data_attachments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('data_id', sa.String(length=36), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=127), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_id'], ['esg_data.data_id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('esg_data_audit_log',
    sa.Column('log_id', sa.String(length=36), nullable=False),
    sa.Column('data_id', sa.String(length=36), nullable=False),
    sa.Column('change_type', sa.Enum('Create', 'Update', 'Delete', 'On-demand Computation', 'Smart Computation', 'CSV Upload', 'Admin Recompute', 'Admin Bulk Recompute', name='change_type'), nullable=False),
    sa.Column('old_value', sa.Float(), nullable=True),
    sa.Column('new_value', sa.Float(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('change_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['data_id'], ['esg_data.data_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('esg_data_audit_log')
    op.drop_table('esg_data_attachments')
    op.drop_table('field_variable_mappings')
    op.drop_index('idx_esg_field_date', table_name='esg_data')
    op.drop_index('idx_esg_entity_date', table_name='esg_data')
    op.drop_table('esg_data')
    op.drop_table('entity_data_point')
    op.drop_index('idx_assignment_fy', table_name='data_point_assignments')
    op.drop_index('idx_assignment_data_entity', table_name='data_point_assignments')
    op.drop_table('data_point_assignments')
    op.drop_table('user')
    op.drop_table('framework_data_fields')
    op.drop_table('data_point')
    op.drop_table('frameworks')
    op.drop_table('entity')
    # ### end Alembic commands ###
